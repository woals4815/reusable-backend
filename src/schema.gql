# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Episode {
  id: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  title: String!
  description: String
  podcast: Podcast!
  rating: Float
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Podcast {
  id: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  title: String!
  category: [String!]!
  creator: User!
  episodes: [Episode!]!
  rating: Float
}

type User {
  id: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  email: String!
  password: String!
  role: UserRole!
  podcasts: [Podcast!]!
}

enum UserRole {
  Client
  Host
}

type CoreOutput {
  ok: Boolean!
  error: String
}

type CreateUserOutput {
  ok: Boolean!
  error: String
}

type LoginOutput {
  ok: Boolean!
  error: String
  token: String
}

type CreatePodcastRatingOutput {
  ok: Boolean!
  error: String
}

type CreateEpisodeOutput {
  ok: Boolean!
  error: String
  episodeId: Float
}

type CreatePodcastOutput {
  ok: Boolean!
  error: String
}

type GetEpisodeOutput {
  ok: Boolean!
  error: String
  episode: Episode
}

type GetPodcastOutput {
  ok: Boolean!
  error: String
  podcast: Podcast
}

type GetAllEpisodesOutput {
  ok: Boolean!
  error: String
  episodes: [Episode!]
}

type EditPodcastOutput {
  ok: Boolean!
  error: String
}

type Query {
  me: User!
  getAllPodcasts: [Podcast!]!
  getPodcast(podcastId: Float!): GetPodcastOutput!
  getAllEpisodes(input: Float!): GetAllEpisodesOutput!
  getEpisode(input: GetEpisodeInput!): GetEpisodeOutput!
}

input GetEpisodeInput {
  podcastId: Int!
  episodeId: Int!
}

type Mutation {
  createUser(input: CreateUserInput!): CreateUserOutput!
  login(input: LoginInput!): LoginOutput!
  createPodcast(input: CreatePodcastInput!): CreatePodcastOutput!
  ratePodcast(input: CreatePodcastRatingInput!): CreatePodcastRatingOutput!
  editPodcast(input: EditPodcastInput!): EditPodcastOutput!
  createEpisode(input: CreateEpisodeInput!): CreateEpisodeOutput!
  rateEpisode(input: CreateEpisodeRatingInput!): CoreOutput!
}

input CreateUserInput {
  email: String!
  password: String!
  name: String!
  role: UserRole!
}

input LoginInput {
  email: String!
  password: String!
}

input CreatePodcastInput {
  title: String!
  category: [String!]!
}

input CreatePodcastRatingInput {
  rating: Float!
  podcastId: Int!
}

input EditPodcastInput {
  title: String
  category: [String!]
  podcastId: Float!
}

input CreateEpisodeInput {
  podcastId: Float!
  title: String!
  description: String!
}

input CreateEpisodeRatingInput {
  rating: Float!
  podcastId: Int!
  episodeId: Int!
}
