# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Category {
  id: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  slug: String!
  podcasts: [Podcast!]!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Rating {
  id: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  rating: Float!
  podcast: Podcast!
  ratedPerson: User!
  episode: Episode!
}

type Podcast {
  id: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  title: String!
  category: Category!
  creator: User!
  episodes: [Episode!]!
  ratings: [Rating!]
}

type User {
  id: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  email: String!
  password: String!
  role: UserRole!
  podcasts: [Podcast!]!
  rated: [Rating!]
}

enum UserRole {
  Client
  Host
}

type Episode {
  id: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  title: String!
  description: String
  podcast: Podcast!
  ratings: [Rating!]
}

type CoreOutput {
  ok: Boolean!
  error: String
}

type CreatePodcastRatingOutput {
  ok: Boolean!
  error: String
}

type CreateEpisodeOutput {
  ok: Boolean!
  error: String
  episodeId: Float
}

type CreatePodcastOutput {
  ok: Boolean!
  error: String
}

type GetEpisodeOutput {
  ok: Boolean!
  error: String
  episode: Episode
}

type GetPodcastOutput {
  ok: Boolean!
  error: String
  podcast: Podcast
}

type GetAllEpisodesOutput {
  ok: Boolean!
  error: String
  episodes: [Episode!]
}

type EditPodcastOutput {
  ok: Boolean!
  error: String
}

type EditEpisodeOutput {
  ok: Boolean!
  error: String
}

type EditPodcastRatingOutput {
  ok: Boolean!
  error: String
}

type EditEpisodeRatingOutput {
  ok: Boolean!
  error: String
}

type SearchPodcastOutput {
  ok: Boolean!
  error: String
  searchResults: [Podcast!]
  totalResultNumber: Float
}

type DeleteOutput {
  ok: Boolean!
  error: String
}

type GetCategoriesOutput {
  ok: Boolean!
  error: String
  categories: [Category!]
}

type CreateUserOutput {
  ok: Boolean!
  error: String
}

type EditProfileOutput {
  ok: Boolean!
  error: String
}

type GetWatchedEpisodesOutput {
  ok: Boolean!
  error: String
  watchedEpisodes: [Episode!]
}

type LoginOutput {
  ok: Boolean!
  error: String
  token: String
}

type MarkWatchedEpisodeOutput {
  ok: Boolean!
  error: String
}

type GetSubscriptionOutput {
  ok: Boolean!
  error: String
  subscriptions: [Podcast!]
}

type ToggleSubscribeOutput {
  ok: Boolean!
  error: String
}

type Query {
  me: User!
  getSubscriptions: GetSubscriptionOutput!
  getWatchedEpisodes: GetWatchedEpisodesOutput!
  getAllPodcasts: [Podcast!]!
  getPodcast(podcastId: Float!): GetPodcastOutput!
  searchPodcastName(input: SearchPodcastInput!): SearchPodcastOutput!
  getAllEpisodes(input: Float!): GetAllEpisodesOutput!
  getEpisode(input: GetEpisodeInput!): GetEpisodeOutput!
  getAllCategories: GetCategoriesOutput!
}

input SearchPodcastInput {
  query: String!
}

input GetEpisodeInput {
  podcastId: Int!
  episodeId: Int!
}

type Mutation {
  createUser(input: CreateUserInput!): CreateUserOutput!
  login(input: LoginInput!): LoginOutput!
  editProfile(input: EditProfileInput!): EditProfileOutput!
  toggleSubscribe(podcastId: Float!): ToggleSubscribeOutput!
  markWatchedEpisode(input: MarkWatchedEpisodeInput!): MarkWatchedEpisodeOutput!
  createPodcast(input: CreatePodcastInput!): CreatePodcastOutput!
  editPodcast(input: EditPodcastInput!): EditPodcastOutput!
  deletePodcast(input: DeletePodcastInput!): DeleteOutput!
  createEpisode(input: CreateEpisodeInput!): CreateEpisodeOutput!
  editEpisode(input: EditEpisodeInput!): EditEpisodeOutput!
  deleteEpisode(input: DeleteEpisodeInput!): DeleteOutput!
  ratePodcast(input: CreatePodcastRatingInput!): CreatePodcastRatingOutput!
  rateEpisode(input: CreateEpisodeRatingInput!): CoreOutput!
  editPodcastRating(input: EditPodcastRatingInput!): EditPodcastRatingOutput!
  editEpisodeRating(input: EditEpisodeRatingInput!): EditEpisodeRatingOutput!
}

input CreateUserInput {
  email: String!
  password: String!
  name: String!
  role: UserRole!
}

input LoginInput {
  email: String!
  password: String!
}

input EditProfileInput {
  userId: Float!
  email: String
  password: String
}

input MarkWatchedEpisodeInput {
  podcastId: Float!
  episodeId: Float!
}

input CreatePodcastInput {
  title: String!
  categoryName: String!
}

input EditPodcastInput {
  title: String
  categoryName: String
  podcastId: Float!
}

input DeletePodcastInput {
  podcastId: Float!
}

input CreateEpisodeInput {
  podcastId: Float!
  title: String!
  description: String!
}

input EditEpisodeInput {
  podcastId: Float!
  episodeId: Float!
  title: String
  description: String
}

input DeleteEpisodeInput {
  podcastId: Float!
  episodeId: Float!
}

input CreatePodcastRatingInput {
  rating: Float!
  podcastId: Int!
}

input CreateEpisodeRatingInput {
  rating: Float!
  podcastId: Int!
  episodeId: Int!
}

input EditPodcastRatingInput {
  rating: Float!
  podcastId: Int!
}

input EditEpisodeRatingInput {
  rating: Float!
  podcastId: Int!
  episodeId: Int!
}
